<Application
	x:Class="GameMakerWpf.App"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:utilitiesLibrary="clr-namespace:UtilitiesLibrary;assembly=UtilitiesLibrary"
	xmlns:wpf="clr-namespace:WPFUtilities;assembly=WPFUtilities"
	xmlns:wpfConverters="clr-namespace:GameMakerWpf.WpfConverters"
	xmlns:domain="clr-namespace:GameMakerWpf.Domain"
	xmlns:gameSpecification="clr-namespace:CCSSDomain.GameSpecification;assembly=CCSSDomain"
	Startup="ApplicationStartup">

	<Application.Resources>

		<wpfConverters:ErrorToNormalBrushConverter x:Key="ErrorToNormalBrushConverter"/>
		<wpfConverters:ErrorToMouseOverBrushConverter x:Key="ErrorToMouseOverBrushConverter"/>
		<wpfConverters:ErrorToFocusedBrushConverter x:Key="ErrorToFocusedBrushConverter"/>
		<wpfConverters:ErrorToToolTipTextBrushConverter x:Key="ErrorToToolTipTextBrushConverter"/>
		<wpfConverters:ColorToBrushConverter x:Key="ColorToBrushConverter"/>



		<Style x:Key="StringInputStyle" TargetType="{x:Type TypeName=TextBox}">

			<d:Style.DataContext>
				<d:DesignInstance Type="wpfUtilities:ISingleInput, IsDesignTimeCreatable=True"/>
			</d:Style.DataContext>

			<!--I have to override the template in order to change the border color when focused or hovered over-->
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost"
										  Focusable="false"
										  HorizontalScrollBarVisibility="Hidden"
										  VerticalScrollBarVisibility="Hidden"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{Binding Path=ErrorLevel,
														Converter={StaticResource ErrorToMouseOverBrushConverter},
														Mode=OneWay}"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="true">
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{Binding Path=ErrorLevel,
														Converter={StaticResource ErrorToFocusedBrushConverter},
														Mode=OneWay}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>

			<Setter Property="BorderBrush" Value="{Binding Path=ErrorLevel, Converter={StaticResource ErrorToNormalBrushConverter}, Mode=OneWay}"/>

			<Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
			<Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
			<Setter Property="Text" Value="{Binding Path=InputObject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


			<Style.Triggers>
				<DataTrigger Binding="{Binding Path=Errors.IsEmpty}" Value="False">

					<Setter Property="ToolTip">
						<Setter.Value>
							<StackPanel>
								<ItemsControl ItemsSource="{Binding Errors}">
									<ItemsControl.ItemTemplate>
										<DataTemplate d:DataType="{wpf:GenericObjectFactory Type={x:Type utilitiesLibrary:Validation.Errors.ValidationError`1}, T=domain:ErrorSeverity}">
											<!--<DataTemplate.DataType>d:DataType="{wpf:GenericObjectFactory Type={x:Type wpfUtilities:Validation.Errors.ValidationError`1}, T=domain:ErrorSeverity}"</DataTemplate.DataType>-->
											<DataTemplate.Resources>
												<Style TargetType="TextBlock">
													<Setter Property="Foreground"
															Value="{Binding Path=Severity,
															Converter={StaticResource ErrorToToolTipTextBrushConverter},
															Mode=OneTime}"/>
												</Style>
											</DataTemplate.Resources>
											<TextBlock Text="{Binding Description}"/>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</StackPanel>
						</Setter.Value>
					</Setter>

				</DataTrigger>
			</Style.Triggers>

		</Style>

		<Style x:Key="MultiStringInputBorderStyle" TargetType="Border">
			<d:Style.DataContext>
				<d:DesignInstance Type="{wpf:GenericObjectFactoryExtension2 Type={x:Type utilitiesLibrary:Validation.Errors.ValidationError`1}, T1=gameSpecification:Version, T2=domain:ErrorSeverity}"/>
				<!--<d:DesignInstance Type="wpfUtilities:MultiStringInput, IsDesignTimeCreatable=True"/>-->
			</d:Style.DataContext>

			<Setter Property="BorderBrush" Value="{Binding Path=ValidationErrorLevel, Converter={StaticResource ErrorToNormalBrushConverter}, Mode=OneWay}"/>

			<Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
			<Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>

			<Style.Triggers>
				<DataTrigger Binding="{Binding Path=ValidationErrors.IsEmpty}" Value="False">

					<Setter Property="ToolTip">
						<Setter.Value>
							<StackPanel>
								<ItemsControl ItemsSource="{Binding ValidationErrors}">
									<ItemsControl.ItemTemplate>
										<DataTemplate d:DataType="{wpf:GenericObjectFactory Type={x:Type utilitiesLibrary:Validation.Errors.ValidationError`1}, T=domain:ErrorSeverity}">
											<DataTemplate.Resources>
												<Style TargetType="TextBlock">
													<Setter Property="Foreground"
															Value="{Binding Path=Severity,
															Converter={StaticResource ErrorToToolTipTextBrushConverter},
															Mode=OneTime}"/>
												</Style>
											</DataTemplate.Resources>
											<TextBlock Text="{Binding Description}"/>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</StackPanel>
						</Setter.Value>
					</Setter>

				</DataTrigger>
			</Style.Triggers>

		</Style>

		<Style x:Key="BooleanInputStyle" TargetType="{x:Type TypeName=CheckBox}">

			<d:Style.DataContext>
				<d:DesignInstance Type="wpfUtilities:ISingleInput, IsDesignTimeCreatable=True"/>
			</d:Style.DataContext>

			<!--I have to override the template in order to change the border color when focused or hovered over-->
			<!--<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<Border x:Name="border"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Background="{TemplateBinding Background}"
								SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost"
										  Focusable="false"
										  HorizontalScrollBarVisibility="Hidden"
										  VerticalScrollBarVisibility="Hidden"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{Binding Path=ErrorLevel,
														Converter={StaticResource ErrorToMouseOverBrushConverter},
														Mode=OneWay}"/>
							</Trigger>
							<Trigger Property="IsFocused" Value="true">
								<Setter Property="BorderBrush"
										TargetName="border"
										Value="{Binding Path=ErrorLevel,
														Converter={StaticResource ErrorToFocusedBrushConverter},
														Mode=OneWay}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>-->

			<Setter Property="BorderBrush" Value="{Binding Path=ErrorLevel, Converter={StaticResource ErrorToNormalBrushConverter}, Mode=OneWay}"/>

			<Setter Property="ToolTipService.InitialShowDelay" Value="200"/>
			<Setter Property="ToolTipService.BetweenShowDelay" Value="1000"/>
			<Setter Property="IsChecked" Value="{Binding Path=InputObject, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>


			<Style.Triggers>
				<DataTrigger Binding="{Binding Path=Errors.IsEmpty}" Value="False">

					<Setter Property="ToolTip">
						<Setter.Value>
							<StackPanel>
								<ItemsControl ItemsSource="{Binding Errors}">
									<ItemsControl.ItemTemplate>
										<DataTemplate d:DataType="{wpf:GenericObjectFactory Type={x:Type utilitiesLibrary:Validation.Errors.ValidationError`1}, T=domain:ErrorSeverity}">
											<!--<DataTemplate.DataType>d:DataType="{wpf:GenericObjectFactory Type={x:Type wpfUtilities:Validation.Errors.ValidationError`1}, T=domain:ErrorSeverity}"</DataTemplate.DataType>-->
											<DataTemplate.Resources>
												<Style TargetType="TextBlock">
													<Setter Property="Foreground"
															Value="{Binding Path=Severity,
															Converter={StaticResource ErrorToToolTipTextBrushConverter},
															Mode=OneTime}"/>
												</Style>
											</DataTemplate.Resources>
											<TextBlock Text="{Binding Description}"/>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
							</StackPanel>
						</Setter.Value>
					</Setter>

				</DataTrigger>
			</Style.Triggers>

		</Style>

	</Application.Resources>
</Application>